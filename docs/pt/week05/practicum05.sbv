0:00:00.000,0:00:05.339
última vez que vimos que uma matriz pode ser escrita basicamente deixe-me desenhar aqui

0:00:05.339,0:00:12.719
a matriz, então tínhamos papéis semelhantes e, em seguida, multiplicamos normalmente design por

0:00:12.719,0:00:18.210
uma coluna tudo bem e sempre que multiplicarmos esses caras você pode ver esses

0:00:18.210,0:00:23.340
e como dois tipos dois tipos diferentes equivalentes de representação

0:00:23.340,0:00:28.980
você pode ver direito você não é legível ok então você pode ver basicamente como

0:00:28.980,0:00:35.430
a saída deste produto foi uma sequência de vezes como a primeira linha

0:00:35.430,0:00:40.469
este vetor de coluna e, novamente, estou bem encolhendo-os, isso deve ser

0:00:40.469,0:00:46.170
o mesmo tamanho certo, porque senão você não pode multiplicá-los, então você

0:00:46.170,0:00:52.170
ter este e assim por diante até o último e este vai ser o meu final

0:00:52.170,0:01:00.960
vetor e vimos que cada um desses corpos aqui o que são esses que falo

0:01:00.960,0:01:05.339
para mim, por favor, há um produto escalar certo, mas o que

0:01:05.339,0:01:08.820
eles representam o que é como podemos chamá-lo qual é outro nome para chamar

0:01:08.820,0:01:13.290
um produto escalar eu mostro a você da última vez uma demonstração com algum governo Chi

0:01:13.290,0:01:18.119
trigonometria certo o que é isso então esta é toda a projeção se você

0:01:18.119,0:01:22.619
fale sobre geometria ou você pode pensar nisso como um cosseno normalizado freira

0:01:22.619,0:01:29.310
valor certo então este vai ser minha projeção basicamente de um kernel ou

0:01:29.310,0:01:36.030
meu sinal de entrada no kernel certo, então essas são projeções de projeção bem

0:01:36.030,0:01:40.619
e então houve também uma outra interpretação disso como há

0:01:40.619,0:01:45.390
outra maneira de ver isso que era basicamente o que tínhamos na primeira coluna

0:01:45.390,0:01:53.579
da matriz a multiplicado pelo primeiro elemento do X destes deste vetor

0:01:53.579,0:01:58.260
certo, então de volta ao elemento número um, então você teve uma segunda chamada

0:01:58.260,0:02:04.020
tempo é o segundo elemento do vetor X até chegar à última coluna

0:02:04.020,0:02:11.100
certo vezes o último um elemento certo suponha que isso é longo N e isso é

0:02:11.100,0:02:16.110
M vezes n certo, então a altura novamente será a dimensão em direção a nós

0:02:16.110,0:02:19.550
deveria - e a largura de uma matriz é a dimensão de onde estamos vindo

0:02:19.550,0:02:24.810
a segunda parte foi a seguinte, então dissemos em vez de usar esta matriz aqui

0:02:24.810,0:02:29.450
em vez disso, já que estamos fazendo convoluções porque gostaríamos de explorar a dispersão

0:02:29.450,0:02:35.400
estacionaridade e composicionalidade dos dados ainda usamos a mesma matriz aqui

0:02:35.400,0:02:41.370
talvez certo nós usamos o mesmo cara aqui, mas então esses kernels nós vamos

0:02:41.370,0:02:45.510
estar usando-os repetidamente a mesma corrente em todo o sinal

0:02:45.510,0:02:51.360
certo, então, neste caso, a largura desta matriz não é mais n

0:02:51.360,0:02:56.820
como estava aqui vai ser K que vai ser o tamanho do kernel certo então aqui

0:02:56.820,0:03:03.090
Eu vou desenhar minha matriz mais fina e esta vai ser K minúsculo K

0:03:03.090,0:03:10.140
e a altura talvez ainda possamos chamar de n ok tudo bem então vamos dizer aqui eu

0:03:10.140,0:03:18.230
tenho vários kernels, por exemplo, deixe-me ter meu tsiyon carnal, então eu posso ter meu

0:03:18.230,0:03:25.080
outro não verde deixa eu trocar vamos colocar rosa pra você ter esse e

0:03:25.080,0:03:33.180
então você pode ter um verde certo e assim por diante, então como usamos esses kernels certo

0:03:33.180,0:03:38.280
agora, basicamente, podemos usar esses kernels empilhando-os e deslocando

0:03:38.280,0:03:43.650
um pouco certo, então tiramos o primeiro kernel daqui e então você está

0:03:43.650,0:03:50.519
vai pegar basicamente você pega o primeiro cara aqui então você muda

0:03:50.519,0:03:58.290
desloque-o e assim por diante até obter toda a matriz e estávamos colocando um 0

0:03:58.290,0:04:02.100
aqui e um 0 aqui certo isso é apenas recapitulação e então você tem este para o

0:04:02.100,0:04:11.379
cor azul agora você faz mágica aqui e apenas copia copia e eu cola

0:04:11.379,0:04:19.370
e agora você também pode fazer cores ver mágica fantástica e temos um rosa e

0:04:19.370,0:04:25.360
então você tem o último certo posso fazer a mesma cópia sim eu posso fazer fantástico

0:04:25.360,0:04:29.080
então você não pode copiar e colar no papel

0:04:29.080,0:04:38.419
tudo certo cor e o último verde claro tudo bem então nós apenas

0:04:38.419,0:04:44.479
duplique quantas matrizes temos agora quantas camadas não conte o

0:04:44.479,0:04:50.600
número como se houvesse letras na tela e K ou M o que é o que é

0:04:50.600,0:05:00.620
K do lado geralmente você está apenas supondo que não deveria estar supondo que deveria

0:05:00.620,0:05:07.120
me diga a resposta correta eu penso nisso como uma entrevista de emprego estou treinando você

0:05:07.120,0:05:14.990
então quantos mapas temos e certo então este aqui são tantos quanto o meu M que

0:05:14.990,0:05:21.470
é o número de linhas dessa coisa inicial aqui, tudo bem, então o que

0:05:21.470,0:05:30.289
é em vez disso a largura deste pequeno kernel aqui ok certo ok qual é o

0:05:30.289,0:05:41.349
altura desta matriz qual é a altura da matriz

0:05:42.340,0:05:45.480
você com certeza tente novamente

0:05:49.220,0:06:04.310
não consigo ouvir e menos k mais um ok e o final qual é a saída disso

0:06:04.310,0:06:08.660
coisa certa, então a saída será um vetor que será de altura

0:06:08.660,0:06:19.430
a mesma direita e menos k mais 1 e então deve estar correto sim, mas então

0:06:19.430,0:06:27.890
quantos qual é a espessura desse vetor final M certo então essas coisas aqui

0:06:27.890,0:06:35.600
e vai tão grosso quanto M à direita, então é aqui que saímos da última vez, mas depois

0:06:35.600,0:06:39.770
alguém me perguntou agora então percebi que temos aqui tantos quantos os diferentes

0:06:39.770,0:06:45.170
cores certas, por exemplo, neste caso, se eu apenas desenhar para ter certeza de que

0:06:45.170,0:06:49.730
entenda o que está acontecendo você tem a primeira coisa aqui agora você tem a segunda

0:06:49.730,0:06:55.600
um aqui e eu tenho o terceiro certo neste caso tudo bem então da última vez eles

0:06:59.750,0:07:03.650
me perguntou se alguém me perguntou no final da aula, então como fazemos convolução

0:07:03.650,0:07:09.760
quando acabamos nessa situação aqui porque aqui assumimos que meu

0:07:09.760,0:07:14.990
cantos são apenas você sabe o que quer que K longo, digamos três longos, mas então eles

0:07:14.990,0:07:21.380
são apenas um pequeno vetor certo e então alguém me disse não, então o que você faz

0:07:21.380,0:07:24.950
daqui como vamos continuar porque agora temos uma espessura antes

0:07:24.950,0:07:32.510
começamos com algo aqui este vetor que tinha apenas n elementos certo

0:07:32.510,0:07:35.690
você está acompanhando até agora estou indo mais rápido porque já vimos esses

0:07:35.690,0:07:44.030
coisas que estou apenas revisando mas você está comigo até agora sim não sim ok

0:07:44.030,0:07:47.720
fantástico, então vamos ver como realmente continuamos, então a coisa é

0:07:47.720,0:07:51.680
mostrar a você agora é assumir que começamos com esse vetor longo

0:07:51.680,0:08:01.400
qual era de altura qual era a altura e certo mas neste caso também este

0:08:01.400,0:08:13.060
significa que temos algo parecido com isso e você tem basicamente aqui

0:08:13.060,0:08:20.720
isso é 1 isso também é 1 então só temos um sinal monofônico por exemplo e isso

0:08:20.720,0:08:26.300
estava na altura certo, então vamos supor que agora estamos usando um

0:08:26.300,0:08:33.950
sistema estereofônico então qual vai ser o meu domínio aqui para que você saiba que meu X pode ser

0:08:33.950,0:08:39.740
pensado como uma função que vai do domínio ao ℝ^{número de canais}, então

0:08:39.740,0:08:47.840
o que é esse cara aqui sim x é uma dimensão e em algum lugar então o que é isso

0:08:47.840,0:08:59.930
Ω vimos este slide no último slide da lição de terça-feira à direita, segundo Ω é

0:08:59.930,0:09:11.720
não é um conjunto de números reais ninguém tenta estamos usando computadores é hora

0:09:11.720,0:09:16.520
linha sim e quantas amostras você tem um número de amostra número de amostra dois

0:09:16.520,0:09:21.710
ou amostra número três para que você tenha basicamente um subconjunto do espaço natural

0:09:21.710,0:09:30.860
certo, então este vai ser algo como 0 1 2, então no set, que é

0:09:30.860,0:09:36.410
vai ser subconjunto de ℕ certo, então não é ℝ. ℝ vai ser se você tiver tempo

0:09:36.410,0:09:45.850
domínio contínuo o que você vê neste caso no caso que acabei de mostrar

0:09:45.850,0:09:55.160
até agora o que é visto neste caso agora número de canais de entrada porque isso é

0:09:55.160,0:10:00.740
vai ser meu X certo esta é minha entrada então neste caso nós mostramos até agora neste

0:10:00.740,0:10:07.220
caso aqui estávamos usando apenas um, então significa que temos um áudio monofônico, vamos

0:10:07.220,0:10:10.880
sete agora a suposição faz a suposição de que esse cara é que é

0:10:10.880,0:10:22.780
serão dois de tal forma que você estará falando sobre sinal fonético estéreo certo

0:10:23.200,0:10:27.380
ok, então vamos ver como isso muda, então

0:10:27.380,0:10:38.450
neste caso, deixe-me pensar sim, então como faço para desenhar, vou desenhar certo

0:10:38.450,0:10:43.400
reclame pouco se você não segue você está seguindo até agora sim porque se

0:10:43.400,0:10:46.550
eu assisto meu tablet eu não vejo você direito então você deveria estar reclamando se

0:10:46.550,0:10:50.750
algo não faz sentido direito senão fica chato de esperar

0:10:50.750,0:10:56.390
e assistindo você o tempo todo certo sim não sim ok eu sou chato ok

0:10:56.390,0:11:00.080
obrigado tudo bem então temos aqui esse sinal

0:11:00.080,0:11:07.280
certo e agora temos alguma espessura, neste caso, qual é o

0:11:07.280,0:11:14.660
espessura desse cara veja bem então neste caso este vai ser C e

0:11:14.660,0:11:18.589
no caso do sinal estereofônico, você terá apenas dois canais restantes

0:11:18.589,0:11:30.170
e certo e este continua indo para baixo tudo bem, então nossos kernels se eu tivesse

0:11:30.170,0:11:35.030
gostaria de realizar uma convolução sobre este sinal certo para que você tenha o mesmo

0:11:35.030,0:11:44.150
buceta certo e assim por diante direito se eu gostaria de realizar uma convolução um grande

0:11:44.150,0:11:47.089
convolução não estou falando de duas deconvoluções né porque são

0:11:47.089,0:11:52.670
ainda usando o domínio que é o número um, então isso é realmente importante

0:11:52.670,0:11:58.510
então se eu perguntar que tipo de sinal é esse, você vai ser basicamente

0:11:58.510,0:12:02.890
você tem que olhar para este número aqui, então estamos falando de um

0:12:02.890,0:12:12.490
sinal dimensional que é um domínio dimensional direito 1d domínio ok

0:12:12.490,0:12:17.710
então ainda estamos usando um sinal 1d, mas neste caso você sabe que tem dois

0:12:17.710,0:12:25.750
valores por ponto, então que tipo de kernels vamos usar, então vou apenas

0:12:25.750,0:12:31.450
desenhá-lo neste caso, vamos usar algo parecido com isso, então estou

0:12:31.450,0:12:37.990
vai desenhar esse cara vamos dizer que eu tenho K aqui que vai ser a minha largura

0:12:37.990,0:12:42.700
do kernel, mas neste caso eu também vou ter alguma espessura neste caso

0:12:42.700,0:12:56.230
aqui, então basicamente você aplica essa coisa aqui ok e então você pode ir

0:12:56.230,0:13:04.060
segunda linha e terceira linha e assim por diante, então você ainda pode ter como aqui m

0:13:04.060,0:13:11.590
grãos, mas neste caso você também tem alguma espessura que deve corresponder ao

0:13:11.590,0:13:17.680
outra espessura certa, então essa espessura aqui tem que corresponder à espessura do

0:13:17.680,0:13:23.980
tamanho de entrada, então deixe-me mostrar como aplicar a convolução para que você

0:13:23.980,0:13:37.980
pegue uma dessas fatias aqui e então você vai aplicar isso aqui

0:13:39.320,0:13:46.190
ok e então você simplesmente desce por este caminho

0:13:46.190,0:13:53.870
tudo bem, então sempre que você aplica isso, você executa esse cara aqui o produto interno

0:13:53.870,0:14:04.410
com estes aqui o que você obtém é na verdade um por um é um escalar, então

0:14:04.410,0:14:09.540
sempre que eu uso essa coisa laranja aqui do lado esquerdo e faço um ponto

0:14:09.540,0:14:14.190
produto escalar produto com este eu apenas recebo um escalar então este é realmente o meu

0:14:14.190,0:14:19.620
convolução em 1d a convolução em 1d significa que desce por aqui e

0:14:19.620,0:14:27.480
apenas de uma maneira, é por isso que é chamado de 1d, mas multiplicamos cada elemento disso

0:14:27.480,0:14:36.290
mascara vezes esse cara aqui agora uma segunda fila e esse cara aqui ok

0:14:36.290,0:14:41.090
você viu você multiplicar todos eles você soma todos eles e então você obtém seu primeiro

0:14:41.090,0:14:47.250
saída aqui ok então sempre que eu fizer essa multiplicação eu recebo minha primeira saída

0:14:47.250,0:14:52.050
aqui então eu continuo deslizando este kernel para baixo e então você vai obter o

0:14:52.050,0:14:58.380
segunda saída, terceira saída, quarta e assim por diante até você descer no final, então o que

0:14:58.380,0:15:03.780
acontece então acontece que eu vou pegar um kernel diferente eu vou

0:15:03.780,0:15:07.950
de volta vamos dizer que eu pego o terceiro ok vamos pegar o segundo eu pego um

0:15:07.950,0:15:19.050
segundo e eu faço a mesma operação você vai chegar aqui

0:15:19.050,0:15:23.240
na verdade, vamos torná-lo como uma matriz

0:15:26.940,0:15:33.790
você desce bem até ir com o último que vai ser o final certo

0:15:33.790,0:15:45.450
o kernel vazio que vai descer desta forma você obtém o último aqui

0:15:51.680,0:15:58.790
ok sim não esclarecimento confuso então esta foi a pergunta que recebi no final do

0:15:58.790,0:16:10.339
class sim Suzy sim porque é um produto escalar de todos esses valores entre então

0:16:10.339,0:16:18.259
basicamente fazer a projeção desta parte do sinal neste kernel para que você

0:16:18.259,0:16:22.879
gostaria de ver qual é a contribuição como qual é o alinhamento desta parte

0:16:22.879,0:16:27.350
do sinal para este subespaço específico ok é assim que uma convolução

0:16:27.350,0:16:31.850
funciona quando você tem vários canais até agora vou mostrar apenas com single

0:16:31.850,0:16:35.319
canal agora temos vários canais ok então oh sim sim em um segundo

0:16:54.259,0:16:59.509
e um na parte superior e na parte inferior, então você realmente perde a primeira linha aqui

0:16:59.509,0:17:04.850
e você perde a última linha aqui, então no final, neste caso, a saída será

0:17:04.850,0:17:10.490
seja n menos três mais um então você perde dois um em cima ok neste caso você

0:17:10.490,0:17:15.140
perder dois na parte inferior se você realmente fizer um Centro no centro do

0:17:15.140,0:17:20.390
convolução geralmente você perde um no início um no final toda vez que você

0:17:20.390,0:17:24.409
execute uma convolução você perde o número da dimensão do kernel

0:17:24.409,0:17:28.789
menos um você pode tentar se você colocar sua mão assim você tem um kernel de

0:17:28.789,0:17:34.340
três você pega o primeiro aqui e está combinando, então você troca um e depois

0:17:34.340,0:17:39.440
você muda para a direita, então tudo bem com a luta, vamos dizer a um pai de dois filhos, então você

0:17:39.440,0:17:44.149
tem seu sinal de cinco você tem seu kernel com dois você tem um dois três

0:17:44.149,0:17:49.070
e quatro, então começamos com cinco e você termina com quatro porque usa um

0:17:49.070,0:17:54.500
tamanho do kernel de dois se você usar um tamanho de kernel de três você obtém um dois e três

0:17:54.500,0:17:57.289
então você vai se você usar um tamanho de kernel de três ok

0:17:57.289,0:18:01.010
então você sempre pode tentar fazer isso bem, então eu vou te mostrar agora o

0:18:01.010,0:18:07.040
dimensões desses kernels e as saídas com PyTorch ok Sim Não

0:18:07.040,0:18:18.500
tudo bem, tudo bem, senhor, você pode ver alguma coisa

0:18:18.500,0:18:25.520
sim certo quero dizer zoom um pouco mais ok então agora podemos ir nós fazemos

0:18:25.520,0:18:33.770
conda ativar pDL, pytorch Deep Learning.

0:18:33.770,0:18:40.520
Então aqui podemos apenas executar o ipython se eu pressionar ctrl LI limpar a tela e

0:18:40.520,0:18:49.820
podemos fazer a importação da tocha, então eu posso fazer a partir da tocha import nn, então agora podemos ver

0:18:49.820,0:18:54.500
por exemplo chamado vamos definir minha camada convolucional convolucional é

0:18:54.500,0:18:59.930
vai ser igual a NN conf e então eu posso continuar até conseguir

0:18:59.930,0:19:04.220
este, digamos sim, digamos que não tenho ideia de como usar essa função, apenas

0:19:04.220,0:19:08.750
coloco um ponto de interrogação eu pressiono ENTER e vou ver aqui agora a documentação

0:19:08.750,0:19:13.460
ok, então, neste caso, você terá o primeiro item que será a entrada

0:19:13.460,0:19:19.820
canal então eu tenho os canais de saída então eu tenho o canto suspira bem então

0:19:19.820,0:19:24.290
por exemplo vamos colocar aqui os canais de entrada temos um estéreo

0:19:24.290,0:19:30.530
sinal então colocamos dois canais o número de cantos que dissemos que era M e vamos

0:19:30.530,0:19:36.650
digamos que temos 16 kernels, então este é o número de kernels que vou usar e

0:19:36.650,0:19:41.810
então vamos ter o tamanho do nosso kernel do que eu uso aqui, então vamos ter K ou

0:19:41.810,0:19:47.570
o tamanho do kernel é igual a 3 ok então aqui vou definir minha primeira convolução

0:19:47.570,0:19:52.910
objeto então se eu imprimir este vem você vai ver que temos uma convolução a

0:19:52.910,0:19:57.580
2d combo desculpe 1 deconvolução fez isso bem, então temos uma convolução 1d

0:20:02.149,0:20:08.869
que vai de dois canais, de modo estereofônico para dezesseis canais, significa

0:20:08.869,0:20:16.039
Eu uso dezesseis kernels o tamanho do skirmish é 3 e então o passo também é 1 ok então

0:20:16.039,0:20:23.859
neste caso, vou verificar quais serão meus pesos convolucionais

0:20:27.429,0:20:33.379
qual é o tamanho dos pesos quantos pesos temos quantos quantos

0:20:33.379,0:20:40.069
quantos aviões temos para os pesos 16 certo então temos 16 pesos o que é

0:20:40.069,0:20:53.649
a duração do dia da chave de D do kernel ok Oh o que é isso -

0:20:54.549,0:21:00.349
Janis está certo, então eu tenho 16 desses scanners que têm espessura - e então

0:21:00.349,0:21:05.539
comprimento de 3 ok faz sentido porque você vai aplicar cada um desses

0:21:05.539,0:21:11.629
16 em todo o sinal então vamos ter o meu sinal agora você vai ser vai

0:21:11.629,0:21:20.599
ser igual a idade ponto R e e e oh suspiros não sei digamos 64 eu também

0:21:20.599,0:21:25.129
tenho que dizer que eu tenho um lote de tamanho 1, então eu tenho um site virtual, então eu só tenho

0:21:25.129,0:21:31.879
um sinal e então isso vai ser 64 quantos canais nós dissemos que isso tem dois

0:21:31.879,0:21:37.819
certo então eu tenho um sinal um exemplo que tem dois canais e tem 64

0:21:37.819,0:21:46.689
samples então este é o meu X espera qual é o tamanho do viés convolucional

0:21:48.320,0:21:54.380
um 16 certo porque você tem um viés / simples / / / muito bem, então o que vai estar em

0:21:54.380,0:22:07.539
nossa minha convolução de X a saída olá, então ainda vou ter uma amostra certa

0:22:07.539,0:22:15.919
quantos canais 16 qual vai ser a duração do sinal ok isso é

0:22:15.919,0:22:22.700
bom 6 conserte ok fantástico tudo bem e daí se eu vou usar

0:22:22.700,0:22:32.240
uma convolução com tamanho do kernel 5 o que eu recebo agora ainda para gritar não consigo

0:22:32.240,0:22:36.320
ouço você 60 ok você está seguindo fantástico ok

0:22:36.320,0:22:44.059
então vamos tentar agora usar uma imagem hiperespectral com uma convolução 2d

0:22:44.059,0:22:49.100
ok, então eu vou codificar agora minha convolução aqui vai ser minha entrada

0:22:49.100,0:22:55.490
este caso está correto ou vai ser um conf venha para D novamente não sei como

0:22:55.490,0:22:59.059
uso então eu coloco um ponto de interrogação e depois tenho aqui canal de entrada canal de saída

0:22:59.059,0:23:05.450
critique o preenchimento estridente ok, então vou colocar entradas testadas entrada

0:23:05.450,0:23:10.429
canal, então é uma imagem hiperespectral com 20 planos, então qual será o

0:23:10.429,0:23:16.149
insira neste caso 20 certo porque você começa a partir de 20 bandas espectrais

0:23:16.149,0:23:20.419
então vamos inserir o número de saída de canais, digamos que estamos

0:23:20.419,0:23:25.330
vou usar novamente 16, neste caso, vou inserir o tamanho do kernel

0:23:25.330,0:23:33.440
já que estou planejando usar ok vamos definir vamos definir meu

0:23:33.440,0:23:40.120
sinal primeiro, então meu X será um ponto de tocha R e, digamos, uma amostra com

0:23:40.120,0:23:52.820
20 canais de altura por exemplo eu acho que 6128 bem segure em 64 e depois com

0:23:52.820,0:23:58.820
128 ok então esta será minha entrada meus dados pessoais ok

0:23:58.820,0:24:04.370
então minha convolução agora pode ser algo assim, então eu tenho 20

0:24:04.370,0:24:09.110
canais de entrada 16 nosso Mike Ernest eu vou estar usando então eu vou ser

0:24:09.110,0:24:15.050
especificando o tamanho do kernel neste caso vamos usar algo como três

0:24:15.050,0:24:24.580
vezes cinco ok então qual vai ser a saída qual é o tamanho do kernel

0:24:29.170,0:24:47.630
alguém sim não o que não 20 Janice é os canais de entrada de dados certo então você

0:24:47.630,0:24:51.680
tem quantos kernels aqui 16 ai vai

0:24:51.680,0:24:56.420
temos 16 kernels que possuem 20 canais de modo que eles podem se sobrepor ao

0:24:56.420,0:25:03.410
entrada 3 por 5 direito pequenino como um curto como sim curto, mas grande ok então o que é

0:25:03.410,0:25:08.140
vai ser meu conv(x).size ? [1, 16, 62, 124]. Digamos que eu gostaria de

0:25:16.310,0:25:22.190
na verdade, adicione de volta o que eu gostaria de liderar a dimensionalidade de canto, posso adicionar alguns

0:25:22.190,0:25:25.730
preenchimento certo, então aqui vai ser o passo que eu vou ter um passo de

0:25:25.730,0:25:29.930
1 novamente se você não se lembra da sintaxe, basta colocar a pergunta

0:25:29.930,0:25:35.120
marca você pode descobrir e, em seguida, quanto esforço devo adicionar agora quanto

0:25:35.120,0:25:41.870
passo na direção y desculpe sim quanto preenchimento devo adicionar no

0:25:41.870,0:25:46.490
y-direction one porque vai ser um em cima e um embaixo, mas depois

0:25:46.490,0:25:51.890
então na direção x ok você sabe que está seguindo fantástico e agora se

0:25:51.890,0:25:57.320
Acabei de executar este, você quer obter o tamanho inicial, então agora você tem os dois

0:25:57.320,0:26:05.500
1d e 2d o ponto é que qual é a dimensão de um kernel convolucional e

0:26:05.500,0:26:12.470
símbolo para o sinal dimensional novamente repito qual é o

0:26:12.470,0:26:20.049
dimensionalidade da coleção de uso de cuidados para dados bidimensionais

0:26:20.860,0:26:27.679
novamente para a direita, então quatro será o número de dimensões necessárias

0:26:27.679,0:26:35.659
para armazenar a coleção de kernels quando você executa convoluções 2d, o que é

0:26:35.659,0:26:40.370
vai ser o passo, então se você não sabe como isso funciona, basta colocar um

0:26:40.370,0:26:44.000
ponto de interrogação e vou te dizer aqui, então stride vai te dizer que você

0:26:44.000,0:26:50.929
afaste-se cada vez que o kernel por um se você for o primeiro

0:26:50.929,0:26:55.460
significa que você é apenas o tamanho do lote, então a tocha espera que você sempre use lotes

0:26:55.460,0:27:00.110
ou seja, quantos sinais você está usando apenas um certo para que nossa expectativa

0:27:00.110,0:27:04.549
se você enviar um vetor de entrada que será o tensor de entrada que tem

0:27:04.549,0:27:12.289
dimensão três vai quebrar e reclamar ok então ainda temos algum tempo

0:27:12.289,0:27:18.049
para ir na segunda parte, tudo bem, a segunda parte vai ser assim que você

0:27:18.049,0:27:23.779
computando algumas derivadas para o primeiro dever de casa, então o

0:27:23.779,0:27:31.909
seguindo a lição de casa talvez você tenha que fazer você tem que calcular isso ok você está

0:27:31.909,0:27:35.510
deveria estar rindo é uma piada ok lá vai

0:27:35.510,0:27:43.340
fantástico, então isso é o que você pode escrever nos anos 90 para o cálculo de

0:27:43.340,0:27:50.029
os gradientes do lsdm que serão cobertos, acho que no próximo

0:27:50.029,0:27:54.950
próxima lição então como de alguma forma eles ainda tinham que fazer essas coisas direito é gentil

0:27:54.950,0:28:00.769
de louco, no entanto, podemos usar o PyTorch para ter computação automática desses

0:28:00.769,0:28:06.500
gradientes para que possamos verificar como funciona esse gradiente automático

0:28:06.500,0:28:12.159
tudo bem então tudo bem então vamos indo

0:28:23.090,0:28:28.490
agora para o notebook número três que é o sim

0:28:28.490,0:28:33.590
invisível deixe-me ver se consigo destacar agora é ainda pior ok número três

0:28:33.590,0:28:41.619
Gratidão automática Oriole ok, deixe-me ir em tela cheia

0:28:41.619,0:28:53.029
ok então fora do nosso tutorial ia estar aqui aqui apenas crie meu tensor que

0:28:53.029,0:28:57.499
tem também esses gradientes necessários iguais verdadeiros neste caso, quero dizer perguntando

0:28:57.499,0:29:02.539
tocha, por favor, rastreie todos os cálculos de gradiente, ele conseguiu a competição

0:29:02.539,0:29:07.749
sobre o tensor de modo que possamos realizar o cálculo de derivadas parciais ok

0:29:07.749,0:29:13.279
neste caso eu vou ter meu Y vai ser então X vai ser simplesmente um

0:29:13.279,0:29:20.419
dois três quatro o Y vai ser X subtraído o número dois tudo bem então

0:29:20.419,0:29:26.869
agora podemos notar que existe essa função grad F n grad f NN FN aqui, então

0:29:26.869,0:29:32.059
vamos ver o que é isso vamos sentar lá e ver oh isso é um sub para trás

0:29:32.059,0:29:37.629
o que significa que o Y foi gerado por um módulo que realiza o

0:29:37.629,0:29:43.669
subtração entre X e e - certo, então você tem X menos 2, portanto, se você

0:29:43.669,0:29:51.860
verifique quem gerou Y bem, há um sub um módulo de subtração ok então o que vai

0:29:51.860,0:30:01.009
seja agora a função de Deus de X você deveria responder oh ok

0:30:01.009,0:30:03.580
por que não há porque eles deveriam ter escrito lá

0:30:07.580,0:30:12.020
Alfredo gerou esse certo ok tudo bem nenhum está bem também

0:30:12.020,0:30:17.000
ok, então vamos realmente colocar nosso nariz dentro de nós estávamos aqui, podemos realmente

0:30:17.000,0:30:23.770
acesse o primeiro elemento você tem o acúmulo porque é o acúmulo eu

0:30:25.090,0:30:29.830
não sei, eu esqueci, mas então se você entrar lá você vai ver o

0:30:29.830,0:30:34.760
vetor inicial o tensor inicial que estamos usando é o um dois três quatro ok então

0:30:34.760,0:30:41.390
dentro deste gráfico computacional você também pode encontrar o tensor original tudo bem

0:30:41.390,0:30:46.880
certo, então vamos agora pegar o Z e dentro vai ser meu Y quadrado vezes três e

0:30:46.880,0:30:51.620
então eu calculo minha média a vai ser a média de Z certo então se eu calcular

0:30:51.620,0:30:56.330
o quadrado dessa coisa aqui e multiplico por três e faço a média

0:30:56.330,0:31:00.500
então esta é a parte quadrada vezes 3 e então esta é a média ok então você pode

0:31:00.500,0:31:06.200
tente se você não acredita em mim tudo bem então vamos ver como essa coisa se parece

0:31:06.200,0:31:10.549
Estarei promovendo aqui todas essas sequências de cálculos, então começamos

0:31:10.549,0:31:16.669
por a partir de uma matriz dois a dois o que esse cara estava aqui para comprar - quem é esse X

0:31:16.669,0:31:22.399
ok você está seguindo legal, então nós subtraímos - certo e então nós

0:31:22.399,0:31:27.440
multiplicado por Y duas vezes certo é por isso que você tem que ro para obter o mesmo

0:31:27.440,0:31:31.669
subtração que é o porquê do X menos 2 multiplicado por ele mesmo então

0:31:31.669,0:31:36.649
você tem outra multiplicação o que é isso ok multiplique por três e então você

0:31:36.649,0:31:42.980
tem o final a média para trás porque este Y é verde porque significa não

0:31:42.980,0:31:51.140
ok, sim, obrigado por rir, ok, então eu calculo o suporte de volta certo

0:31:51.140,0:31:59.409
o que o pano de fundo faz o que esta linha faz

0:32:00.360,0:32:08.610
Eu quero ouvir todos que você conhece já computamos o que radianos certo tão preto

0:32:08.610,0:32:11.580
propagação é como você calcula os gradientes como treinamos suas redes

0:32:11.580,0:32:20.730
com gradientes não está certo ou o que Aaron disse ontem de volta

0:32:20.730,0:32:27.000
propagação é que é usado para calcular o gradiente completamente

0:32:27.000,0:32:29.970
coisas diferentes ok por favor mantenha-os separados não mescle

0:32:29.970,0:32:34.559
todos eles depois de um tempo que não eles não me veem essas duas coisas continuam

0:32:34.559,0:32:43.740
colidindo em um pensamento piegas não é doloroso ok ela vai calcular o

0:32:43.740,0:32:51.659
gradientes certo, então adivinhe o que estamos calculando alguns gradientes agora ok, então nós

0:32:51.659,0:33:02.580
vá na sua página vai ser o que era uma era a média né então

0:33:02.580,0:33:10.529
isso é 1/4 certo a soma de todos aqueles zᵢ

0:33:10.529,0:33:17.460
o que então eu vou de 1 a 4 ok então o que é que eu disse que vou

0:33:17.460,0:33:27.539
ser igual a 3yᵢ² certo sim sem perguntas não ok tudo bem e então

0:33:27.539,0:33:36.840
este é igual a 3(x-2)² certo, então o que ele pertence

0:33:36.840,0:33:38.899
para onde pertence a qual é o ℝ

0:33:44.279,0:33:51.200
certo então é um scaler tudo bem então agora podemos calcular ∂a/∂x.

0:33:51.200,0:33:58.110
Então quanto é esse material que você vai ter 1/4 sai do fórum aqui e

0:33:58.110,0:34:03.090
então você sabe, vamos ter este em relação ao elemento xᵢ

0:34:03.090,0:34:09.179
ok, então vamos ter este zᵢ dentro é esse, eu tenho o 3yᵢ²,

0:34:09.179,0:34:15.899
e será 3(xᵢ- 2)². Certo, então esses três vem

0:34:15.899,0:34:22.080
aqui os dois também descem e então você multiplica por (xᵢ – 2).

0:34:22.080,0:34:33.260
Até agora deve estar correto ok fantástico tudo bem então meu X era esse elemento aqui

0:34:33.589,0:34:38.190
na verdade, deixe-me calcular também este, então este vai embora este se torna

0:34:38.190,0:34:47.690
verdade isso é 1,5 vezes xᵢ – 3. Certo - 2 - 3

0:34:55.159,0:35:06.780
ok matemática ok ok obrigado tudo bem. Então, o que vai ser ∂a/∂x ?

0:35:06.780,0:35:11.339
Na verdade, estou escrevendo a transposição diretamente aqui, então para o primeiro elemento

0:35:11.339,0:35:18.859
você tem um você tem um vezes 1,5 então 1,5 menos 3 você obtém 1 menos 1,5 certo

0:35:18.859,0:35:23.670
o segundo vai ser 3 menos 3 você tem 0 Ryan isso é 3 menos 3

0:35:23.670,0:35:27.420
talvez eu deva escrever tudo certo para que você esteja realmente seguindo, então você tem

0:35:27.420,0:35:37.589
1,5 menos 3 agora você tem 3 menos 3 abaixo você tem 4 ponto 5 menos 3 e então o

0:35:37.589,0:35:47.160
o último vai ser 6 menos 3 que vai ser igual a menos 1 ponto 5

0:35:47.160,0:35:59.789
0 1 ponto 5 e depois 3 certo você concorda ok deixa eu escrever isso aqui

0:35:59.789,0:36:06.149
ok apenas lembre-se para que você seja computado a retropropagação aqui estou eu

0:36:06.149,0:36:14.609
vamos apenas trazê-lo para os gradientes e então a direita é a mesma coisa que nós

0:36:14.609,0:36:27.630
chegou aqui certo para não ter que transpor aqui sempre que você tocar

0:36:27.630,0:36:33.209
a derivada parcial no PyTorch você obtém a mesma forma é a entrada

0:36:33.209,0:36:37.469
dimensão, então, se você tiver um peso em qualquer dimensão, quando você calcular

0:36:37.469,0:36:41.069
o parcial você ainda tem a mesma dimensão eles não trocam eles não

0:36:41.069,0:36:44.789
vire ok eles só usam isso por praticidade na versão correta eu

0:36:44.789,0:36:49.919
significa que o gradiente deve ser a transposição daquela coisa, desculpe fiz

0:36:49.919,0:36:54.479
Jacobian que é a transposição do gradiente certo se for um vetor, mas isso

0:36:54.479,0:37:08.130
é um tensor, então o que quer que usamos a mesma coisa de forma não, então este

0:37:08.130,0:37:13.639
deve ser uma reviravolta acredito que talvez eu esteja errado, mas não acho certo então

0:37:13.639,0:37:19.919
isso é como básico esses PyTorch básicos agora você pode fazer coisas malucas porque nós

0:37:19.919,0:37:23.609
como um louco certo, quero dizer, eu acho que se você gosta de mim, você

0:37:23.609,0:37:29.669
como um louco certo, então aqui eu apenas crio meu

0:37:29.669,0:37:34.259
vetor X que vai ser um poço tridimensional um unidimensional

0:37:34.259,0:37:43.769
tensor de três itens eu vou multiplicar X por dois então eu chamo isso

0:37:43.769,0:37:49.859
um Y então eu começo meu contador a zero e depois até que a norma do Y seja longa

0:37:49.859,0:37:56.699
mil abaixo de mil eu continuo dobrando Y ok e assim você pode ficar como um dinâmico

0:37:56.699,0:38:01.529
gráfico à direita o gráfico é base é condicional ao aleatório real

0:38:01.529,0:38:04.979
inicialização que você nem pode dizer porque eu nem usei uma semente, então

0:38:04.979,0:38:08.999
todos que estão executando essas coisas vão obter números diferentes, então estes são

0:38:08.999,0:38:11.910
os valores finais do por que você pode me dizer

0:38:11.910,0:38:23.549
quantas iterações executamos para que a média dessas coisas seja realmente menor do que um

0:38:23.549,0:38:27.630
mil sim, mas então eu estou perguntando se você sabe quantas vezes isso

0:38:27.630,0:38:41.119
loop passou por nada bom porque é aleatório aumenta você sabe que é uma pergunta ruim

0:38:41.119,0:38:45.539
sobre perguntas ruins da próxima vez que eu tiver algo para você, então eu vou ser

0:38:45.539,0:38:51.569
imprimindo este agora estou dizendo que os agarrados são 2048 certo

0:38:51.569,0:38:55.589
apenas verifique o central no momento certo este é o gradiente real

0:38:55.589,0:39:04.739
então você pode me dizer agora quantas vezes o loop foi para alguém disse 11 como

0:39:04.739,0:39:14.420
muitos acabam por 11 ok para as pessoas apenas assar as mãos e os outros

0:39:14.809,0:39:17.809
21 ok qualquer outro cara 11 10

0:39:25.529,0:39:30.749
ok, na verdade, temos alguém que tem a solução certa e esse loop continuou

0:39:30.749,0:39:35.759
por 10 vezes por que é porque você tem a primeira multiplicação por 2 aqui

0:39:35.759,0:39:40.589
e então o loop continua repetidamente e multiplica por 2 certo para que o final

0:39:40.589,0:39:45.239
number será o menor número de iterações no loop mais o

0:39:45.239,0:39:50.779
adicional como adição e multiplicação fora da direita sim não

0:39:50.779,0:39:56.670
você está dormindo talvez tudo bem, eu te disse para não comer antes da aula, caso contrário você

0:39:56.670,0:40:05.009
fique grogue bem, então inferência isso é legal, então aqui eu vou estar apenas tendo

0:40:05.009,0:40:09.420
tanto no meu X quanto no Y, vamos apenas fazer regressão linear direita linear ou

0:40:09.420,0:40:17.670
o que quer que pense que o operador add é apenas o produto escalar, então tanto o X

0:40:17.670,0:40:21.589
e W tem o gradiente requerido igual a true

0:40:21.589,0:40:27.119
sendo isso significa que vamos acompanhar os gradientes e

0:40:27.119,0:40:31.290
o gráfico computacional, então, se eu executar este, você obterá o parcial

0:40:31.290,0:40:37.710
derivadas do produto interno em relação ao Z em relação ao

0:40:37.710,0:40:43.920
entrada vai ser os pesos certos, então no intervalo está a entrada certa e o

0:40:43.920,0:40:47.160
uns são os pesos, então a derivada parcial em relação à entrada é

0:40:47.160,0:40:50.070
serão os pesos parciais em relação aos pesos serão os

0:40:50.070,0:40:56.670
entrada certo sim não sim ok agora eu só sei que normalmente é este é o

0:40:56.670,0:41:00.359
caso eu só precisei de gradientes para meus parâmetros porque vou usar

0:41:00.359,0:41:06.030
os gradientes para atualizar mais tarde os parâmetros da mãe são assim

0:41:06.030,0:41:12.300
neste caso você não tem nenhum vamos ter neste caso o que eu costumo fazer

0:41:12.300,0:41:17.250
quero fazer inferência quando eu faço inferência eu digo tocha uma tocha parar de rastrear qualquer

0:41:17.250,0:41:22.950
tipo de operação, então eu digo tocha, não, Deus, por favor, então este, independentemente de

0:41:22.950,0:41:28.859
sua entrada sempre tem a grama necessária verdadeira ou falsa, o que quer que eu diga

0:41:28.859,0:41:35.060
tocha sem pirralhos você não tem nenhum cálculo um gráfico cuidado certo

0:41:35.060,0:41:41.130
portanto, se eu tentar executar a propagação de volta em um tensor que foi

0:41:41.130,0:41:46.320
gerado a partir de como não tem realmente você sabe gráfico porque este

0:41:46.320,0:41:50.940
não tem um gráfico, você receberá um erro, então, se eu executar este, você receberá

0:41:50.940,0:41:55.410
um erro e você tem uma cara muito brava aqui porque é um erro e então

0:41:55.410,0:42:00.720
pega seu elemento 0 do tensor não requer grads e não tem um deus

0:42:00.720,0:42:07.650
funcionam bem então II que era o sim, o que quer que eles residam aqui, na verdade, então

0:42:07.650,0:42:11.400
você não poderia ter problemas que, porque não há gráfico anexado a

0:42:11.400,0:42:19.710
que ok perguntas isso é tão poderoso que você não pode fazer isso desta vez com tensor

0:42:19.710,0:42:26.790
você está bem, o fluxo do tensor é tipo, sim, mais coisas aqui, na verdade, mais coisas

0:42:26.790,0:42:30.600
chegando agora [Aplausos]

0:42:30.600,0:42:36.340
então voltamos aqui temos dentro da pasta extra ele tem uns bonitinhos

0:42:36.340,0:42:40.450
coisas que eu queria cobrir os dois apenas que vamos apenas para o segundo que eu

0:42:40.450,0:42:47.290
acho que desculpe o segundo vai ser o seguinte, então neste caso estamos

0:42:47.290,0:42:52.750
vamos gerar nossos próprios módulos específicos, então eu gosto, digamos que eu gostaria de

0:42:52.750,0:42:58.030
definir minha própria função, que é uma função incrível super especial, posso decidir se

0:42:58.030,0:43:02.560
Eu quero usá-lo para você sabe treinar Nets eu preciso pegar o passe para frente e

0:43:02.560,0:43:06.220
também tem que saber qual é a derivada parcial da entrada em relação ao

0:43:06.220,0:43:10.930
saída de tal forma que eu possa usar este módulo em qualquer tipo de ponto que você conheça no meu

0:43:10.930,0:43:15.670
código interno de tal forma que você saiba que, usando back prop, você conhece a regra da cadeia, você acabou de

0:43:15.670,0:43:20.320
ligue a coisa. Yann continuou várias vezes, desde que você saiba parcial

0:43:20.320,0:43:23.410
derivada da saída em relação à entrada, você pode conectar essas coisas

0:43:23.410,0:43:31.690
em qualquer lugar em sua cadeia de operações, então neste caso definimos minha adição que

0:43:31.690,0:43:35.620
está realizando a adição das duas entradas neste caso, mas quando você

0:43:35.620,0:43:41.130
execute a retropropagação se tiver uma adição qual é a retropropagação

0:43:41.130,0:43:47.020
então, se você tiver uma adição das duas coisas, obterá uma saída quando enviar

0:43:47.020,0:43:53.320
abaixo dos gradientes o que acontece com o gradiente que você obtém

0:43:53.320,0:43:57.160
sabe copiado em ambos os lados corretos e é por isso que você obtém os dois

0:43:57.160,0:44:01.390
cópias ou a mesma coisa e eles são enviados de um lado do outro você

0:44:01.390,0:44:05.170
pode executar essas coisas que você verá aqui, você obtém o mesmo gradiente nos dois sentidos

0:44:05.170,0:44:09.460
neste caso eu tenho uma divisão então eu venho da mesma coisa e então eu dividi e

0:44:09.460,0:44:13.180
Eu tenho essas duas coisas fazendo outra coisa se eu descer com o gradiente o que

0:44:13.180,0:44:20.080
eu faço você adicioná-los direito e é por isso que temos aqui o add install você pode

0:44:20.080,0:44:23.680
execute este que você verá aqui que tivemos esses dois

0:44:23.680,0:44:27.910
gradientes aqui e depois quando você subiu ou desculpe quando você desceu os dois

0:44:27.910,0:44:30.790
coisas que os dois gradientes somam e estão aqui ok

0:44:30.790,0:44:36.190
então, novamente, se você usar coisas pré-fabricadas no PyTorch. Eles estão corretos este você

0:44:36.190,0:44:41.080
pode mexer você pode colocar qualquer tipo de diferente em

0:44:41.080,0:44:47.950
para uma função e uma função para trás, acho que ficamos sem tempo outras perguntas

0:44:47.950,0:44:58.800
antes de realmente sairmos não, tudo bem, então eu vejo na segunda-feira e fico aquecido